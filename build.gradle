plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id("io.github.goooler.shadow") version "8.1.8"
}

group = 'dev.ua.ikeepcalm'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url "https://repo.panda-lang.org/releases" }
    maven { url "https://repo.triumphteam.dev/snapshots/"}
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly 'net.luckperms:api:5.4'
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")
    implementation("dev.triumphteam:triumph-gui-paper:3.1.13-SNAPSHOT")
    implementation "dev.rollczi:litecommands-bukkit:3.9.7"
    implementation 'com.google.code.gson:gson:2.11.0'
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
}

shadowJar {
    relocate("dev.triumphteam.gui", "dev.ua.ikeepcalm.doublelife.triumphgui")
    relocate("com.google.gson", "dev.ua.ikeepcalm.doublelife.gson")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.named("build") {
    dependsOn tasks.named("shadowJar")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
